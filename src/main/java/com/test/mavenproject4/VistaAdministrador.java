//LINEA 657 COMENTADA POR ERROR

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.test.mavenproject4;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import static com.test.mavenproject4.Recepcion.JSON;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.swing.DefaultCellEditor;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;
import okhttp3.ResponseBody;

/**
 *
 * @author jcs98
 */
public class VistaAdministrador extends javax.swing.JFrame {

    private final OkHttpClient client = new OkHttpClient();
    public static final MediaType JSON = MediaType.get("application/json; charset=utf-8");
    private Usuario user;
    private List<String> filtros = new ArrayList<>();
    private List<String> ordenarPor = new ArrayList<>();
    private List<String> clientesOrdenarPor = new ArrayList<>();
    private List<String> vehiculosFiltrarPor = new ArrayList<>();
    private List<String> vehiculosOrdenarPor = new ArrayList<>();
    List<Encomiendas> encomiendas;
    List<Cliente> clientes;
    List<Vehiculos> vehiculos;
    List<Usuario> usuarios;

    public VistaAdministrador() {
        initComponents();
    }

    public VistaAdministrador(Usuario user) {
        initComponents();
        this.user = user;
        URL iconURL = getClass().getResource("/ShippingPro2kiconr.png");
            // iconURL is null when not found
        ImageIcon icon = new ImageIcon(iconURL);
         this.setIconImage(icon.getImage());
        loadAdminDashboard();

        //Se inicializan los filtros
        filtros.add("estado in(0, 1, 2)");
        filtros.add("estado = 0");
        filtros.add("estado = 1");
        filtros.add("estado = 2");
        filtros.add("prioridad = 1");
        filtros.add("prioridad = 0");

        //Se inicializan los ordenar
        ordenarPor.add("fecha_entrada desc");
        ordenarPor.add("fecha_entrada asc");
        ordenarPor.add("estado");
        ordenarPor.add("prioridad");
        ordenarPor.add("c1.nombre");
        ordenarPor.add("c2.nombre");
        
        //se inicializa el ordenar por de clientes
        clientesOrdenarPor.add("id asc");
        clientesOrdenarPor.add("nombre asc");
        clientesOrdenarPor.add("ubic_prov asc");
        
        //se inicializan los filtros de vehiculos
        vehiculosFiltrarPor.add("disponibilidad in(0, 1)");
        vehiculosFiltrarPor.add("disponibilidad = 0");
        vehiculosFiltrarPor.add("disponibilidad = 1");
        
        //se inicializa el ordenar por vehiculos
        vehiculosOrdenarPor.add("id asc");
        vehiculosOrdenarPor.add("disponibilidad asc");
        vehiculosOrdenarPor.add("capacidad_carga asc");
        
        //se inicializa el cbox de las opciones de prov de clientes al editar
        TableColumn provinciasColumn = clientesJTable.getColumnModel().getColumn(2);
        
        JComboBox provCBox = new JComboBox();
        provCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bocas del Toro", "Chiriquí", "Coclé", "Colón", "Darién", "Herrera", "Los Santos", "Panamá", "Panamá Oeste", "Veraguas" }));
    
        provinciasColumn.setCellEditor(new DefaultCellEditor(provCBox));
        
        //se inicializa el cbox de las opciones de prov de clientes al editar
        TableColumn rolColumn = usuariosJTable.getColumnModel().getColumn(2);
        
        JComboBox rolCBox = new JComboBox();
        rolCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Recepcion", "Almacen" }));
    
        rolColumn.setCellEditor(new DefaultCellEditor(rolCBox));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        panelAdmin = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        vehicDispLb = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        enProcesoLb = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        recibidasLb = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        enviadasLb = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        vistaGeneralJTable = new javax.swing.JTable();
        jPanel18 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        ingresoMonetarioLb = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        encomiendasJTable = new javax.swing.JTable();
        jPanel21 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        filtroPorCBox = new javax.swing.JComboBox<>();
        jLabel26 = new javax.swing.JLabel();
        ordenPorCBox = new javax.swing.JComboBox<>();
        jPanel22 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        clientesJTable = new javax.swing.JTable();
        jPanel24 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        clientesProvFiltroCBox = new javax.swing.JComboBox<>();
        jLabel31 = new javax.swing.JLabel();
        clientesOrdenarPorCBox = new javax.swing.JComboBox<>();
        jPanel25 = new javax.swing.JPanel();
        modificarClienteBtn = new javax.swing.JButton();
        buscarClientesBtn = new javax.swing.JButton();
        agregarClienteBtn = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel29 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        vehiculosJTable = new javax.swing.JTable();
        jPanel30 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        vehiculosFiltroCBox = new javax.swing.JComboBox<>();
        jLabel35 = new javax.swing.JLabel();
        vehiculosOrdenCBox = new javax.swing.JComboBox<>();
        jPanel31 = new javax.swing.JPanel();
        vehiculosModificarBtn = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        vehiculosBuscarBtn = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jPanel33 = new javax.swing.JPanel();
        usuariosModificarBtn = new javax.swing.JButton();
        usuariosEliminarBtn = new javax.swing.JButton();
        usuariosAgregarBtn = new javax.swing.JButton();
        jPanel34 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        usuariosJTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        clientesProvFiltroCBox1 = new javax.swing.JComboBox<>();
        jLabel33 = new javax.swing.JLabel();
        clientesOrdenarPorCBox1 = new javax.swing.JComboBox<>();
        jPanel27 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        clientesJTable1 = new javax.swing.JTable();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PANEL DE ADMINISTRADOR");
        setName("financiero"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        panelAdmin.setToolTipText("");
        panelAdmin.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 16)); // NOI18N
        panelAdmin.setName("Recibo de paquetes\nEnvío de paquetes\nAdministrar clientes\nAdministrar repartidores\nAdministrar vehículos"); // NOI18N
        panelAdmin.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                panelAdminStateChanged(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ÚLTIMO MES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Semilight", 1, 14))); // NOI18N
        jPanel2.setName(""); // NOI18N

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        jLabel1.setText("Vehículos disponibles");

        vehicDispLb.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        vehicDispLb.setText("0/0");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vehicDispLb, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(202, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vehicDispLb)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        jLabel4.setText("En Camino");

        enProcesoLb.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        enProcesoLb.setForeground(new java.awt.Color(255, 204, 51));
        enProcesoLb.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        enProcesoLb.setText("0");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 173, Short.MAX_VALUE))
                    .addComponent(enProcesoLb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enProcesoLb)
                .addContainerGap())
        );

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel19.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        jLabel19.setText("Recibidas");

        recibidasLb.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        recibidasLb.setForeground(new java.awt.Color(255, 0, 0));
        recibidasLb.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        recibidasLb.setText("0");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(0, 182, Short.MAX_VALUE))
                    .addComponent(recibidasLb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(recibidasLb)
                .addContainerGap())
        );

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel21.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        jLabel21.setText("Entregadas");

        enviadasLb.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        enviadasLb.setForeground(new java.awt.Color(0, 204, 51));
        enviadasLb.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        enviadasLb.setText("0");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enviadasLb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(0, 171, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enviadasLb)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ÚLTIMAS 10 ENCOMIENDAS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Semilight", 1, 14))); // NOI18N

        vistaGeneralJTable.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 14)); // NOI18N
        vistaGeneralJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EMISOR", "RECEPTOR", "ESTADO", "FECHA DE REGISTRO", "COSTO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vistaGeneralJTable.setRowHeight(30);
        jScrollPane2.setViewportView(vistaGeneralJTable);
        if (vistaGeneralJTable.getColumnModel().getColumnCount() > 0) {
            vistaGeneralJTable.getColumnModel().getColumn(0).setResizable(false);
            vistaGeneralJTable.getColumnModel().getColumn(1).setResizable(false);
            vistaGeneralJTable.getColumnModel().getColumn(2).setResizable(false);
            vistaGeneralJTable.getColumnModel().getColumn(3).setResizable(false);
            vistaGeneralJTable.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        jLabel6.setText("Ingreso Monetario");

        ingresoMonetarioLb.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        ingresoMonetarioLb.setForeground(new java.awt.Color(0, 153, 0));
        ingresoMonetarioLb.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ingresoMonetarioLb.setText("0.00");

        jLabel24.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 153, 0));
        jLabel24.setText("$");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ingresoMonetarioLb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(ingresoMonetarioLb))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(209, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelAdmin.addTab("VISTA GENERAL", jPanel2);

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lista de encomiendas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel20.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        encomiendasJTable.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        encomiendasJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "EMISOR", "RECEPTOR", "ESTADO", "PRIORIDAD", "FECHA RECIBIDO", "TIEMPO ESTIMADO", "DESCRIPCIÓN", "COSTO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        encomiendasJTable.setRowHeight(30);
        jScrollPane1.setViewportView(encomiendasJTable);
        if (encomiendasJTable.getColumnModel().getColumnCount() > 0) {
            encomiendasJTable.getColumnModel().getColumn(0).setResizable(false);
            encomiendasJTable.getColumnModel().getColumn(1).setResizable(false);
            encomiendasJTable.getColumnModel().getColumn(2).setResizable(false);
            encomiendasJTable.getColumnModel().getColumn(3).setResizable(false);
            encomiendasJTable.getColumnModel().getColumn(4).setResizable(false);
            encomiendasJTable.getColumnModel().getColumn(5).setResizable(false);
            encomiendasJTable.getColumnModel().getColumn(6).setResizable(false);
            encomiendasJTable.getColumnModel().getColumn(7).setResizable(false);
        }

        jPanel20.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 840, 400));

        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Controles", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel21.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Filtrar por:");
        jPanel21.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        filtroPorCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos (por defecto)", "Recibidas", "En Camino", "Entregadas", "Alta Prioridad", "Baja Prioridad" }));
        jPanel21.add(filtroPorCBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, 140, -1));

        jLabel26.setText("Ordenar por:");
        jPanel21.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, -1, -1));

        ordenPorCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Recientes (por defecto)", "Antiguos", "Estado", "Prioridad", "Emisor", "Receptor" }));
        jPanel21.add(ordenPorCBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, 140, -1));

        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Acciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel22.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton4.setText("Eliminar");
        jButton4.setToolTipText("Eliminar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel22.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 160, -1));

        jButton2.setText("Buscar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, 880, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(214, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(48, 48, 48))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );

        panelAdmin.addTab("ENCOMIENDAS", jPanel3);

        jPanel23.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lista de Clientes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel23.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        clientesJTable.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        clientesJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "CÉDULA/RUC", "NOMBRE", "PROVINCIA", "TELEFONO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        clientesJTable.setRowHeight(30);
        jScrollPane3.setViewportView(clientesJTable);
        if (clientesJTable.getColumnModel().getColumnCount() > 0) {
            clientesJTable.getColumnModel().getColumn(0).setResizable(false);
            clientesJTable.getColumnModel().getColumn(1).setResizable(false);
            clientesJTable.getColumnModel().getColumn(2).setResizable(false);
            clientesJTable.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel23.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 880, 370));

        jPanel24.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Controles", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel30.setText("Provincia:");

        clientesProvFiltroCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todas (por defecto)", "Bocas del Toro", "Chiriquí", "Coclé", "Colón", "Darién", "Herrera", "Los Santos", "Panamá", "Panamá Oeste", "Veraguas" }));

        jLabel31.setText("Ordenar por:");

        clientesOrdenarPorCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Id (por defecto)", "Nombre", "Provincia" }));

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(clientesProvFiltroCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(clientesOrdenarPorCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel30)
                        .addComponent(clientesProvFiltroCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel31)
                        .addComponent(clientesOrdenarPorCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel25.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Acciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel25.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        modificarClienteBtn.setText("Modificar");
        modificarClienteBtn.setToolTipText("Modificar");
        modificarClienteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarClienteBtnActionPerformed(evt);
            }
        });
        jPanel25.add(modificarClienteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 160, -1));

        buscarClientesBtn.setText("Buscar");
        buscarClientesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarClientesBtnActionPerformed(evt);
            }
        });

        agregarClienteBtn.setText("Agregar Cliente");
        agregarClienteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarClienteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(agregarClienteBtn)
                .addGap(683, 683, 683)
                .addComponent(buscarClientesBtn))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscarClientesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(agregarClienteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        panelAdmin.addTab("CLIENTES", jPanel4);

        jPanel29.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lista de Vehículos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel29.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        vehiculosJTable.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        vehiculosJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "MATRICULA", "DESCRIPCIÓN", "DISPONIBILIDAD", "CAPACIDAD (lb)", "CONDUCTOR", "CÉDULA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vehiculosJTable.setRowHeight(30);
        jScrollPane5.setViewportView(vehiculosJTable);
        if (vehiculosJTable.getColumnModel().getColumnCount() > 0) {
            vehiculosJTable.getColumnModel().getColumn(0).setResizable(false);
            vehiculosJTable.getColumnModel().getColumn(1).setResizable(false);
            vehiculosJTable.getColumnModel().getColumn(2).setResizable(false);
            vehiculosJTable.getColumnModel().getColumn(3).setResizable(false);
            vehiculosJTable.getColumnModel().getColumn(3).setHeaderValue("CAPACIDAD (lb)");
            vehiculosJTable.getColumnModel().getColumn(4).setResizable(false);
            vehiculosJTable.getColumnModel().getColumn(4).setHeaderValue("CONDUCTOR");
            vehiculosJTable.getColumnModel().getColumn(5).setResizable(false);
            vehiculosJTable.getColumnModel().getColumn(5).setHeaderValue("CÉDULA");
        }

        jPanel29.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 840, 400));

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Controles", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel34.setText("Filtrar por:");

        vehiculosFiltroCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos (por defecto)", "Disponibles", "Ocupados" }));

        jLabel35.setText("Ordenar por:");

        vehiculosOrdenCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Matricula (por defecto)", "Disponibilidad", "Capacidad" }));

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(vehiculosFiltroCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(jLabel35)
                .addGap(18, 18, 18)
                .addComponent(vehiculosOrdenCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vehiculosFiltroCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vehiculosOrdenCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35)
                    .addComponent(jLabel34))
                .addContainerGap())
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Acciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        vehiculosModificarBtn.setText("Modificar");
        vehiculosModificarBtn.setToolTipText("Modificar");
        vehiculosModificarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehiculosModificarBtnActionPerformed(evt);
            }
        });

        jButton10.setText("Agregar");
        jButton10.setToolTipText("Eliminar");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(vehiculosModificarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vehiculosModificarBtn)
                    .addComponent(jButton10))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        vehiculosBuscarBtn.setText("Buscar");
        vehiculosBuscarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehiculosBuscarBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(vehiculosBuscarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, 880, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 212, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel29, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(vehiculosBuscarBtn)
                .addContainerGap())
        );

        panelAdmin.addTab("VEHÍCULOS", jPanel6);

        jPanel33.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Acciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        usuariosModificarBtn.setText("Modificar");
        usuariosModificarBtn.setToolTipText("Modificar");
        usuariosModificarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuariosModificarBtnActionPerformed(evt);
            }
        });

        usuariosEliminarBtn.setText("Eliminar");
        usuariosEliminarBtn.setToolTipText("Eliminar");
        usuariosEliminarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuariosEliminarBtnActionPerformed(evt);
            }
        });

        usuariosAgregarBtn.setText("Agregar");
        usuariosAgregarBtn.setToolTipText("Eliminar");
        usuariosAgregarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuariosAgregarBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(usuariosModificarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(164, 164, 164)
                .addComponent(usuariosAgregarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(usuariosEliminarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71))
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usuariosModificarBtn)
                    .addComponent(usuariosAgregarBtn)
                    .addComponent(usuariosEliminarBtn))
                .addGap(4, 4, 4))
        );

        jPanel34.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lista de Usuarios", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel34.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        usuariosJTable.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        usuariosJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NOMBRE", "CORREO", "ROL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        usuariosJTable.setRowHeight(30);
        jScrollPane6.setViewportView(usuariosJTable);
        if (usuariosJTable.getColumnModel().getColumnCount() > 0) {
            usuariosJTable.getColumnModel().getColumn(0).setResizable(false);
            usuariosJTable.getColumnModel().getColumn(1).setResizable(false);
            usuariosJTable.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel34.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 860, 430));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel34, javax.swing.GroupLayout.DEFAULT_SIZE, 1092, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel34, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelAdmin.addTab("USUARIOS", jPanel9);

        jPanel26.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Controles", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel32.setText("Provincia:");

        clientesProvFiltroCBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todas (por defecto)", "Bocas del Toro", "Chiriquí", "Coclé", "Colón", "Darién", "Herrera", "Los Santos", "Panamá", "Panamá Oeste", "Veraguas" }));

        jLabel33.setText("Ordenar por:");

        clientesOrdenarPorCBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Id (por defecto)", "Nombre", "Provincia" }));

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel32)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(clientesProvFiltroCBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(clientesOrdenarPorCBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel32)
                        .addComponent(clientesProvFiltroCBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel33)
                        .addComponent(clientesOrdenarPorCBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel27.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lista de Clientes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel27.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        clientesJTable1.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        clientesJTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "MES", "ENCOMIENDAS RECIBIDAS", "ENCOMIENDAS ENTREGADAS", "INGRESO BRUTO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        clientesJTable1.setRowHeight(30);
        jScrollPane4.setViewportView(clientesJTable1);
        if (clientesJTable1.getColumnModel().getColumnCount() > 0) {
            clientesJTable1.getColumnModel().getColumn(0).setResizable(false);
            clientesJTable1.getColumnModel().getColumn(1).setResizable(false);
            clientesJTable1.getColumnModel().getColumn(2).setResizable(false);
            clientesJTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel27.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 880, 370));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(198, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        panelAdmin.addTab("INFORME FINANCIERO", jPanel5);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelAdmin)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(panelAdmin)
                .addContainerGap())
        );

        panelAdmin.getAccessibleContext().setAccessibleName("Envío de paquetes");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void panelAdminStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_panelAdminStateChanged
        JTabbedPane menu = (JTabbedPane) evt.getSource();

        int selectedTab = menu.getSelectedIndex();

        switch (selectedTab) {
            case 0:
                if (user != null) {
                    loadAdminDashboard();
                }
                break;
            case 1:
                loadEncomiendas();
                break;
            case 2:
                loadClientes();
                break;
            case 3:
                loadVehiculos();
                break;
            case 4:
                loadUsuarios();
                break;
            case 5: 
                loadFinanzas();
                break;
        }
    }//GEN-LAST:event_panelAdminStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        loadEncomiendas();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        Object[] options = {"Borrar", "Cancelar"};

        int dialogRes = JOptionPane.showOptionDialog(
                null,
                "La encomienda se borrará, esta accion no puede ser revertida.\n\n¿Desea Continuar?",
                "Borrar Encomienda",
                JOptionPane.OK_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, options, options[0]
        );

        if (dialogRes == JOptionPane.OK_OPTION) {

            int selectedRow = encomiendasJTable.getSelectedRow();

            Encomiendas encomienda = encomiendas.get(selectedRow);

            int encomiendaId = encomienda.getId();

            String json = "{\n"
                    + "    \"id\": " + encomiendaId + "\n"
                    + "}";

            RequestBody body = RequestBody.create(JSON, json);

            Request request = new Request.Builder()
                    .url("https://t-express-rest.herokuapp.com/encomiendas/eliminar")
                    .header("auth-token", user.getToken())
                    .delete(body)
                    .build();

            client.newCall(request).enqueue(new Callback() {
                @Override
                public void onFailure(Call call, IOException ioe) {
                    System.out.println(ioe.getMessage());
                }

                @Override
                public void onResponse(Call call, Response rspns) throws IOException {

                    try ( ResponseBody responseBody = rspns.body()) {
                        String json = responseBody.string();

                        if (!rspns.isSuccessful()) {

                            JOptionPane.showMessageDialog(
                                    null,
                                    json,
                                    "Ha ocurrido un problema",
                                    JOptionPane.ERROR_MESSAGE
                            );

                            responseBody.close();

                            return;

                        }

                        JOptionPane.showMessageDialog(
                                null,
                                json,
                                "Eliminada",
                                JOptionPane.INFORMATION_MESSAGE
                        );

                        responseBody.close();

                        loadEncomiendas();

                    }
                }
            });

        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void buscarClientesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarClientesBtnActionPerformed
        loadClientes();
    }//GEN-LAST:event_buscarClientesBtnActionPerformed

    private void modificarClienteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarClienteBtnActionPerformed
        
        Object[] options = {"Actualizar", "Cancelar"};

        int dialogRes = JOptionPane.showOptionDialog(
                null,
                "El cliente se actualizará con los nuevos datos.\n\n¿Desea Continuar?",
                "Actualizar Cliente",
                JOptionPane.OK_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, options, options[0]
        );

        if (dialogRes == JOptionPane.OK_OPTION) {

            int selectedRow = clientesJTable.getSelectedRow();
        
            String id = clientesJTable.getModel().getValueAt(selectedRow, 0).toString();
            String newName = clientesJTable.getModel().getValueAt(selectedRow, 1).toString();
            String newProvincia = clientesJTable.getModel().getValueAt(selectedRow, 2).toString();
            String newPhone = clientesJTable.getModel().getValueAt(selectedRow, 3).toString();

            String json = "{\n" +
                            "    \"id\": \"" + id + "\",\n" +
                            "    \"nomb\": \"" + newName + "\",\n" +
                            "    \"ubic_prov\": \"" + newProvincia + "\",\n" +
                            "    \"tel\": \"" + newPhone + "\"\n" +
                            "}";

            RequestBody body = RequestBody.create(JSON, json);

            Request request = new Request.Builder()
                    .url("https://t-express-rest.herokuapp.com/clientes/actualizar")
                    .header("auth-token", user.getToken())
                    .post(body)
                    .build();

            client.newCall(request).enqueue(new Callback() {
                @Override
                public void onFailure(Call call, IOException ioe) {
                    System.out.println(ioe.getMessage());
                }

                @Override
                public void onResponse(Call call, Response rspns) throws IOException {

                    try ( ResponseBody responseBody = rspns.body()) {
                        String json = responseBody.string();

                        if (!rspns.isSuccessful()) {

                            JOptionPane.showMessageDialog(
                                    null,
                                    json,
                                    "Ha ocurrido un problema",
                                    JOptionPane.ERROR_MESSAGE
                            );

                            responseBody.close();

                            return;

                        }

                        JOptionPane.showMessageDialog(
                                null,
                                json,
                                "Actualizado",
                                JOptionPane.INFORMATION_MESSAGE
                        );

                        responseBody.close();

                        loadClientes();

                    }
                }
            });

        }
    }//GEN-LAST:event_modificarClienteBtnActionPerformed

    private void agregarClienteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarClienteBtnActionPerformed
        
        AgregarCliente addCli = new AgregarCliente(user);
        addCli.setVisible(true);
        
        addCli.addWindowListener(new WindowAdapter(){
            @Override
            public void windowClosed(WindowEvent e) {
                super.windowClosed(e);
                
                loadClientes();
            }
            
        });
    }//GEN-LAST:event_agregarClienteBtnActionPerformed

    private void vehiculosBuscarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehiculosBuscarBtnActionPerformed
        loadVehiculos();
    }//GEN-LAST:event_vehiculosBuscarBtnActionPerformed

    private void vehiculosModificarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehiculosModificarBtnActionPerformed
        
        Object[] options = {"Actualizar", "Cancelar"};

        int dialogRes = JOptionPane.showOptionDialog(
                null,
                "El vehiculo se actualizará con los nuevos datos.\n\n¿Desea Continuar?",
                "Actualizar Vehiculo",
                JOptionPane.OK_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, options, options[0]
        );

        if (dialogRes == JOptionPane.OK_OPTION) {

            int selectedRow = vehiculosJTable.getSelectedRow();
        
            String id = vehiculosJTable.getModel().getValueAt(selectedRow, 0).toString();
            String newName = vehiculosJTable.getModel().getValueAt(selectedRow, 4).toString();
            String newCedula = vehiculosJTable.getModel().getValueAt(selectedRow, 5).toString();

            String json = "{\n" +
                            "    \"id\": \"" + id + "\",\n" +
                            "    \"nombre_chofer\": \"" + newName + "\",\n" +
                            "    \"ced_chofer\": \"" + newCedula + "\"\n" +
                            "}";

            RequestBody body = RequestBody.create(JSON, json);

            Request request = new Request.Builder()
                    .url("https://t-express-rest.herokuapp.com/vehiculos/actualizar")
                    .header("auth-token", user.getToken())
                    .post(body)
                    .build();

            client.newCall(request).enqueue(new Callback() {
                @Override
                public void onFailure(Call call, IOException ioe) {
                    System.out.println(ioe.getMessage());
                }

                @Override
                public void onResponse(Call call, Response rspns) throws IOException {

                    try ( ResponseBody responseBody = rspns.body()) {
                        String json = responseBody.string();

                        if (!rspns.isSuccessful()) {

                            JOptionPane.showMessageDialog(
                                    null,
                                    json,
                                    "Ha ocurrido un problema",
                                    JOptionPane.ERROR_MESSAGE
                            );

                            responseBody.close();

                            return;

                        }

                        JOptionPane.showMessageDialog(
                                null,
                                json,
                                "Actualizado",
                                JOptionPane.INFORMATION_MESSAGE
                        );

                        responseBody.close();

                        loadVehiculos();

                    }
                }
            });

        }
    }//GEN-LAST:event_vehiculosModificarBtnActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        AgregarVehiculo addVehiculo = new AgregarVehiculo(user);
        addVehiculo.setVisible(true);
        
        addVehiculo.addWindowListener(new WindowAdapter(){
            @Override
            public void windowClosed(WindowEvent e) {
                super.windowClosed(e);
                
                loadVehiculos();
            }
            
        });
    }//GEN-LAST:event_jButton10ActionPerformed

    private void usuariosModificarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuariosModificarBtnActionPerformed
        
        if(usuariosJTable.getSelectedRow() < 0) return;
        
        Object[] options = {"Actualizar", "Cancelar"};

        int dialogRes = JOptionPane.showOptionDialog(
                null,
                "El usuario se actualizará con los nuevos datos.\n\n¿Desea Continuar?",
                "Actualizar Usuario",
                JOptionPane.OK_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, options, options[0]
        );

        if (dialogRes == JOptionPane.OK_OPTION) {

            int selectedRow = usuariosJTable.getSelectedRow();
        
            int id = usuarios.get(selectedRow).getId();
            String userRol = usuariosJTable.getModel().getValueAt(selectedRow, 2).toString();

            String json = "{\n" +
                            "    \"id\": " + id + ",\n" +
                            "    \"role\": \"" + userRol + "\"\n" +
                            "}";

            RequestBody body = RequestBody.create(JSON, json);

            Request request = new Request.Builder()
                    .url("https://t-express-rest.herokuapp.com/auth/modificar")
                    .header("auth-token", user.getToken())
                    .post(body)
                    .build();

            client.newCall(request).enqueue(new Callback() {
                @Override
                public void onFailure(Call call, IOException ioe) {
                    System.out.println(ioe.getMessage());
                }

                @Override
                public void onResponse(Call call, Response rspns) throws IOException {

                    try ( ResponseBody responseBody = rspns.body()) {
                        String json = responseBody.string();

                        if (!rspns.isSuccessful()) {

                            JOptionPane.showMessageDialog(
                                    null,
                                    json,
                                    "Ha ocurrido un problema",
                                    JOptionPane.ERROR_MESSAGE
                            );

                            responseBody.close();

                            return;

                        }

                        JOptionPane.showMessageDialog(
                                null,
                                json,
                                "Actualizado",
                                JOptionPane.INFORMATION_MESSAGE
                        );

                        responseBody.close();

                        loadUsuarios();

                    }
                }
            });

        }
    }//GEN-LAST:event_usuariosModificarBtnActionPerformed

    private void usuariosEliminarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuariosEliminarBtnActionPerformed
        
        Object[] options = {"Borrar", "Cancelar"};

        int dialogRes = JOptionPane.showOptionDialog(
                null,
                "El Usuario se borrará, esta accion no puede ser revertida.\n\n¿Desea Continuar?",
                "Borrar Usuario",
                JOptionPane.OK_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, options, options[0]
        );

        if (dialogRes == JOptionPane.OK_OPTION) {

            int selectedRow = usuariosJTable.getSelectedRow();
        
            int id = usuarios.get(selectedRow).getId();

            String json = "{\n"
                    + "    \"id\": " + id + "\n"
                    + "}";

            RequestBody body = RequestBody.create(JSON, json);

            Request request = new Request.Builder()
                    .url("https://t-express-rest.herokuapp.com/auth/eliminar")
                    .header("auth-token", user.getToken())
                    .delete(body)
                    .build();

            client.newCall(request).enqueue(new Callback() {
                @Override
                public void onFailure(Call call, IOException ioe) {
                    System.out.println(ioe.getMessage());
                }

                @Override
                public void onResponse(Call call, Response rspns) throws IOException {

                    try ( ResponseBody responseBody = rspns.body()) {
                        String json = responseBody.string();

                        if (!rspns.isSuccessful()) {

                            JOptionPane.showMessageDialog(
                                    null,
                                    json,
                                    "Ha ocurrido un problema",
                                    JOptionPane.ERROR_MESSAGE
                            );

                            responseBody.close();

                            return;

                        }

                        JOptionPane.showMessageDialog(
                                null,
                                json,
                                "Eliminado",
                                JOptionPane.INFORMATION_MESSAGE
                        );

                        responseBody.close();

                        loadUsuarios();

                    }
                }
            });

        }
    }//GEN-LAST:event_usuariosEliminarBtnActionPerformed

    private void usuariosAgregarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuariosAgregarBtnActionPerformed
        
        AgregarUsuario addUser = new AgregarUsuario(user);
        addUser.setVisible(true);
        
        addUser.addWindowListener(new WindowAdapter(){
            @Override
            public void windowClosed(WindowEvent e) {
                super.windowClosed(e);
                
                loadUsuarios();
            }
            
        });
        
    }//GEN-LAST:event_usuariosAgregarBtnActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
     Autenticacion a = new Autenticacion();
     a.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                System.out.println(info.getName());
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaAdministrador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarClienteBtn;
    private javax.swing.JButton buscarClientesBtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTable clientesJTable;
    private javax.swing.JTable clientesJTable1;
    private javax.swing.JComboBox<String> clientesOrdenarPorCBox;
    private javax.swing.JComboBox<String> clientesOrdenarPorCBox1;
    private javax.swing.JComboBox<String> clientesProvFiltroCBox;
    private javax.swing.JComboBox<String> clientesProvFiltroCBox1;
    private javax.swing.JLabel enProcesoLb;
    private javax.swing.JTable encomiendasJTable;
    private javax.swing.JLabel enviadasLb;
    private javax.swing.JComboBox<String> filtroPorCBox;
    private javax.swing.JLabel ingresoMonetarioLb;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton modificarClienteBtn;
    private javax.swing.JComboBox<String> ordenPorCBox;
    private javax.swing.JTabbedPane panelAdmin;
    private javax.swing.JLabel recibidasLb;
    private javax.swing.JButton usuariosAgregarBtn;
    private javax.swing.JButton usuariosEliminarBtn;
    private javax.swing.JTable usuariosJTable;
    private javax.swing.JButton usuariosModificarBtn;
    private javax.swing.JLabel vehicDispLb;
    private javax.swing.JButton vehiculosBuscarBtn;
    private javax.swing.JComboBox<String> vehiculosFiltroCBox;
    private javax.swing.JTable vehiculosJTable;
    private javax.swing.JButton vehiculosModificarBtn;
    private javax.swing.JComboBox<String> vehiculosOrdenCBox;
    private javax.swing.JTable vistaGeneralJTable;
    // End of variables declaration//GEN-END:variables

    private void loadAdminDashboard() {

        Request request = new Request.Builder()
                .url("https://t-express-rest.herokuapp.com/encomiendas/adminPanel")
                .header("auth-token", user.getToken())
                .build();

        client.newCall(request).enqueue(new Callback() {
            @Override
            public void onFailure(Call call, IOException ioe) {
                System.out.println(ioe.getMessage());
            }

            @Override
            public void onResponse(Call call, Response rspns) throws IOException {

                try ( ResponseBody responseBody = rspns.body()) {
                    String json = responseBody.string();

                    if (!rspns.isSuccessful()) {

                        JOptionPane.showMessageDialog(
                                null,
                                json,
                                "Ha ocurrido un problema",
                                JOptionPane.ERROR_MESSAGE
                        );

                        responseBody.close();

                        return;

                    }

                    AdminDashboardData adminData = new Gson().fromJson(json, AdminDashboardData.class);

                    ingresoMonetarioLb.setText(String.format("%.2f", adminData.getIngreso()));

                    recibidasLb.setText("" + adminData.getRecibidas());
                    enProcesoLb.setText("" + adminData.getEn_camino());
                    enviadasLb.setText("" + adminData.getEntregadas());

                    vehicDispLb.setText(String.format("%d/%d", adminData.getVehiculos_disponibles(), adminData.getVehiculos_totales()));

                    DefaultTableModel dtm = (DefaultTableModel) vistaGeneralJTable.getModel();

                    dtm.setRowCount(adminData.getUltimasEncomiendas().size());
                    
                    int index = 0;

                    for (Encomiendas encomienda : adminData.getUltimasEncomiendas()) {

                        vistaGeneralJTable.getModel().setValueAt(encomienda.getEnvia(), index, 0);
                        vistaGeneralJTable.getModel().setValueAt(encomienda.getRecibe(), index, 1);
                        vistaGeneralJTable.getModel().setValueAt(encomienda.getEstadoText(), index, 2);
                        vistaGeneralJTable.getModel().setValueAt(encomienda.getFecha_de_entrada(), index, 3);
                        vistaGeneralJTable.getModel().setValueAt(String.format("%.2f", encomienda.getCosto()), index, 4);

                        index++;
                    }

                    responseBody.close();

                }
            }
        });

    }

    private void loadEncomiendas() {

        int selectedFiltro = filtroPorCBox.getSelectedIndex();
        int selectedOrden = ordenPorCBox.getSelectedIndex();

        String queryParams = "?filtro=" + filtros.get(selectedFiltro) + "&orden=" + ordenarPor.get(selectedOrden);

        Request request = new Request.Builder()
                .url("https://t-express-rest.herokuapp.com/encomiendas/"+queryParams)
                .header("auth-token", user.getToken())
                .build();

        client.newCall(request).enqueue(new Callback() {
            @Override
            public void onFailure(Call call, IOException ioe) {
                System.out.println(ioe.getMessage());
            }

            @Override
            public void onResponse(Call call, Response rspns) throws IOException {

                try ( ResponseBody responseBody = rspns.body()) {
                    String json = responseBody.string();

                    if (!rspns.isSuccessful()) {

                        JOptionPane.showMessageDialog(
                                null,
                                json,
                                "Ha ocurrido un problema",
                                JOptionPane.ERROR_MESSAGE
                        );

                        responseBody.close();

                        return;

                    }

                    encomiendas = new Gson().fromJson(json, new TypeToken<List<Encomiendas>>() {
                    }.getType());

                    DefaultTableModel dtm = (DefaultTableModel) encomiendasJTable.getModel();

                    dtm.setRowCount(encomiendas.size());

                    int index = 0;

                    for (Encomiendas encomienda : encomiendas) {

                        encomiendasJTable.getModel().setValueAt(encomienda.getEnvia(), index, 0);
                        encomiendasJTable.getModel().setValueAt(encomienda.getRecibe(), index, 1);
                        encomiendasJTable.getModel().setValueAt(encomienda.getEstadoText(), index, 2);
                        encomiendasJTable.getModel().setValueAt(encomienda.getPrioridadText(), index, 3);
                        encomiendasJTable.getModel().setValueAt(encomienda.getFecha_de_entrada(), index, 4);
                        encomiendasJTable.getModel().setValueAt(encomienda.getTiempoEstTxt(), index, 5);
                        encomiendasJTable.getModel().setValueAt(encomienda.getDescripcion(), index, 6);
                        encomiendasJTable.getModel().setValueAt(String.format("%.2f", encomienda.getCosto()), index, 7);

                        index++;
                    }

                    responseBody.close();

                }
            }
        });
    }

    private void loadClientes() {
        
        String selectedFiltroProv = (clientesProvFiltroCBox.getSelectedIndex() == 0 ? "" : clientesProvFiltroCBox.getSelectedItem().toString());
        int selectedOrden = clientesOrdenarPorCBox.getSelectedIndex();

        String queryParams = "?filtro=ubic_prov='" + selectedFiltroProv + "'&orden=" + clientesOrdenarPor.get(selectedOrden);

        Request request = new Request.Builder()
                .url("https://t-express-rest.herokuapp.com/clientes/"+queryParams)
                .header("auth-token", user.getToken())
                .build();

        client.newCall(request).enqueue(new Callback() {
            @Override
            public void onFailure(Call call, IOException ioe) {
                System.out.println(ioe.getMessage());
            }

            @Override
            public void onResponse(Call call, Response rspns) throws IOException {

                try ( ResponseBody responseBody = rspns.body()) {
                    String json = responseBody.string();

                    if (!rspns.isSuccessful()) {

                        JOptionPane.showMessageDialog(
                                null,
                                json,
                                "Ha ocurrido un problema",
                                JOptionPane.ERROR_MESSAGE
                        );

                        responseBody.close();

                        return;

                    }

                    clientes = new Gson().fromJson(json, new TypeToken<List<Cliente>>() {
                    }.getType());

                    DefaultTableModel dtm = (DefaultTableModel) clientesJTable.getModel();

                    dtm.setRowCount(clientes.size());

                    int index = 0;

                    for (Cliente cliente : clientes) {

                        clientesJTable.getModel().setValueAt(cliente.getId(), index, 0);
                        clientesJTable.getModel().setValueAt(cliente.getNombre(), index, 1);
                        clientesJTable.getModel().setValueAt(cliente.getUbic_prov(), index, 2);
                        clientesJTable.getModel().setValueAt(cliente.getTelefono(), index, 3);

                        index++;
                    }

                    responseBody.close();

                }
            }
        });
    }

    private void loadVehiculos() {
        
        int selectedFiltro = vehiculosFiltroCBox.getSelectedIndex();
        int selectedOrden = vehiculosOrdenCBox.getSelectedIndex();

        String queryParams = "?filtro=" + vehiculosFiltrarPor.get(selectedFiltro) + "&orden=" + vehiculosOrdenarPor.get(selectedOrden);

        Request request = new Request.Builder()
                .url("https://t-express-rest.herokuapp.com/vehiculos/" + queryParams)
                .header("auth-token", user.getToken())
                .build();

        client.newCall(request).enqueue(new Callback() {
            @Override
            public void onFailure(Call call, IOException ioe) {
                System.out.println(ioe.getMessage());
            }

            @Override
            public void onResponse(Call call, Response rspns) throws IOException {

                try ( ResponseBody responseBody = rspns.body()) {
                    String json = responseBody.string();

                    if (!rspns.isSuccessful()) {

                        JOptionPane.showMessageDialog(
                                null,
                                json,
                                "Ha ocurrido un problema",
                                JOptionPane.ERROR_MESSAGE
                        );

                        responseBody.close();

                        return;

                    }

                    vehiculos = new Gson().fromJson(json, new TypeToken<List<Vehiculos>>() {
                    }.getType());

                    DefaultTableModel dtm = (DefaultTableModel) vehiculosJTable.getModel();

                    dtm.setRowCount(vehiculos.size());

                    int index = 0;

                    for (Vehiculos vehiculo : vehiculos) {

                        vehiculosJTable.getModel().setValueAt(vehiculo.getId(), index, 0);
                        vehiculosJTable.getModel().setValueAt(vehiculo.getDescripcion(), index, 1);
                        vehiculosJTable.getModel().setValueAt(vehiculo.getDisponibilidadTxt(), index, 2);
                        vehiculosJTable.getModel().setValueAt(String.format("%.2f", vehiculo.getCapacidad_carga()), index, 3);
                        vehiculosJTable.getModel().setValueAt(vehiculo.getNombre_chofer(), index, 4);
                        vehiculosJTable.getModel().setValueAt(vehiculo.getCed_chofer(), index, 5);

                        index++;
                    }

                    responseBody.close();

                }
            }
        });
        
    }
    
    private void loadUsuarios(){
        
        Request request = new Request.Builder()
                .url("https://t-express-rest.herokuapp.com/auth/")
                .header("auth-token", user.getToken())
                .build();

        client.newCall(request).enqueue(new Callback() {
            @Override
            public void onFailure(Call call, IOException ioe) {
                System.out.println(ioe.getMessage());
            }

            @Override
            public void onResponse(Call call, Response rspns) throws IOException {

                try ( ResponseBody responseBody = rspns.body()) {
                    String json = responseBody.string();

                    if (!rspns.isSuccessful()) {

                        JOptionPane.showMessageDialog(
                                null,
                                json,
                                "Ha ocurrido un problema",
                                JOptionPane.ERROR_MESSAGE
                        );

                        responseBody.close();

                        return;

                    }

                    usuarios = new Gson().fromJson(json, new TypeToken<List<Usuario>>() {
                    }.getType());

                    DefaultTableModel dtm = (DefaultTableModel) usuariosJTable.getModel();

                    dtm.setRowCount(usuarios.size());

                    int index = 0;

                    for (Usuario usuario : usuarios) {

                        usuariosJTable.getModel().setValueAt(usuario.getNombre(), index, 0);
                        usuariosJTable.getModel().setValueAt(usuario.getCorreo(), index, 1);
                        usuariosJTable.getModel().setValueAt(usuario.getRole(), index, 2);

                        index++;
                    }

                    responseBody.close();

                }
            }
        });
    }

    private void loadFinanzas() {
        
        
        
    }
}
